// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}


model User {
  id              String @id @default(uuid())
  username        String @unique
  imageUrl        String @db.Text
  externalUserId  String @unique
  bio             String? @db.Text

  following       Follow[] @relation("Following")
  follow          Follow[] @relation(name: "FollowedBy")

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  blocking        Block[] @relation(name: "Blocking")
  blockedBy       Block[] @relation(name: "BlockedBy")
  stream          Stream?
}

model Follow {
  id            String @id @default(uuid())
  followerId    String 
  followingId   String
  
  follower      User @relation(name: "Following", fields: [followerId], references: [id], onDelete: Cascade)
  following     User @relation(name: "FollowedBy", fields: [followingId], references: [id], onDelete: Cascade)
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([followerId])
  @@index([followingId])

  @@unique([followerId, followingId])
}

model Block {
  id            String @id @default(uuid())
  blockerId     String 
  blockedId     String
  
  blocker       User @relation(name: "Blocking", fields: [blockerId], references: [id], onDelete: Cascade)
  blocked       User @relation(name: "BlockedBy", fields: [blockedId], references: [id], onDelete: Cascade)

  @@index([blockerId])
  @@index([blockedId])

  @@unique([blockerId, blockedId])
}

model Stream {
  id                      String @id @default(uuid())
  name                    String  
  thumbnailUrl            String?
  
  ingressId               String? @unique
  serverUrl               String?
  streamKey               String?

  isStreaming             Boolean @default(false)
  isChatEnabled           Boolean @default(true)
  isChatDelayed           Boolean @default(true)
  isChatFollowersOnly     Boolean @default(false)
  isUsingProfanityFilter  Boolean @default(false)
  
  eyeIsTracked            Boolean @default(false)

  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  
  userId                  String @unique
  user                    User @relation(fields: [userId], references: [id], onDelete: Cascade) 

  @@index([userId])
  @@index([ingressId])
}
